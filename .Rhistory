Tabla = Table_index)
colnames(table_1)
table_1 <- table_wo_na (base = pc1_avg_table, cols_number = c(2:ncol(pc1_avg_table) ))
PCA_asegurados=prcomp(table_1  ,   scale. = T,  rank. =1)
summary(PCA_asegurados)
hist(PCA_asegurados$x)
# library(modelsummary)
# modelsummary(mod, statistic = c("t = {statistic}",
#                                 "se = {std.error}",
#                                 "conf.int"))
# # ?modelsummary
# avg_table = aggregate_function(aggregate = 'avg',
#                                 cols_to_agg = colnames(fech_liqui)[2]  ,
#                                 group_by = colnames(fech_liqui)[3] ,
#                                 Tabla = fech_liqui)
##################################################
Table_index[[2]] = as.numeric(Table_index[[2]])
colnames(Table_index)[c(31,32,34:46)]
cols_asegurados = colnames(Table_index[,c(32,34:46)]) # 31
cols_asegurados
# library(modelsummary)
# modelsummary(mod, statistic = c("t = {statistic}",
#                                 "se = {std.error}",
#                                 "conf.int"))
# # ?modelsummary
# avg_table = aggregate_function(aggregate = 'avg',
#                                 cols_to_agg = colnames(fech_liqui)[2]  ,
#                                 group_by = colnames(fech_liqui)[3] ,
#                                 Tabla = fech_liqui)
##################################################
Table_index[[2]] = as.numeric(Table_index[[2]])
colnames(Table_index)[c(31,32,34:46)]
cols_asegurados = colnames(Table_index[,c(32,34:46)]) # 31
pc1_avg_table = aggregate_function(aggregate = 'avg',
cols_to_agg = cols_asegurados  ,
group_by =  colnames(Table_index)[c(1)],
Tabla = Table_index)
table_1 <- table_wo_na (base = pc1_avg_table, cols_number = c(2:ncol(pc1_avg_table) ))
PCA_asegurados=prcomp(table_1  ,   scale. = T,  rank. =1)
summary(PCA_asegurados)
hist(PCA_asegurados$x)
cols_asegurados = colnames(Table_index[,c(32,34:46,50,51,55)]) # 31
pc1_avg_table = aggregate_function(aggregate = 'avg',
cols_to_agg = cols_asegurados  ,
group_by =  colnames(Table_index)[c(1)],
Tabla = Table_index)
table_1 <- table_wo_na (base = pc1_avg_table, cols_number = c(2:ncol(pc1_avg_table) ))
PCA_asegurados=prcomp(table_1  ,   scale. = T,  rank. =1)
summary(PCA_asegurados)
hist(PCA_asegurados$x)
PCA_asegurados=prcomp(table_1  ,   scale. = T,  rank. =2)
summary(PCA_asegurados)
cols_asegurados = colnames(Table_index[,c(32,34:46)]) # 31 ,50,51,55
pc1_avg_table = aggregate_function(aggregate = 'avg',
cols_to_agg = cols_asegurados  ,
group_by =  colnames(Table_index)[c(1)],
Tabla = Table_index)
table_1 <- table_wo_na (base = pc1_avg_table, cols_number = c(2:ncol(pc1_avg_table) ))
PCA_asegurados=prcomp(table_1  ,   scale. = T,  rank. =1)
summary(PCA_asegurados)
hist(PCA_asegurados$x)
Table_index   = cbind(Table_index , predict(PCA_asegurados, Table_index) )
colnames(Table_index)[ncol(Table_index)] = 'PCA_caract_aseg'
hist(Table_index$PCA_caract_aseg)
# Eps arriba del percentil 75
unique(subset(Table_index,Table_index$PCA_caract_aseg >= quantile(na.omit(Table_index$PCA_caract_aseg), 0.95))$homo_code_eps)
# }
###########################################################################
# PCA 1
Table_index = Table_index[, c(1:95)]
colnames(Table_index )
columnas_salud =  c(3,4,47,48,53,62)
colnames(Table_index )[columnas_salud ]
pc2_avg_table = aggregate_function(aggregate = 'AVG',
cols_to_agg = colnames(Table_index[,columnas_salud]) ,
group_by =  colnames(Table_index)[1],
Tabla = Table_index)
table_1 <- table_wo_na (base = pc2_avg_table, cols_number = c(2:ncol(pc2_avg_table) ))
pca1=prcomp(table_1  ,   scale. = T,  rank. =1)
summary(pca1)
Table_index   = cbind(Table_index , predict(pca1, Table_index) )
colnames(Table_index)[ncol(Table_index)] = 'PCA_main_var'
hist(Table_index$PCA_main_var)
### max 5 min 5
Table_index$PCA_main_var = ifelse(Table_index$PCA_main_var  >= 5,5, Table_index$PCA_main_var)
summary((Table_index$PCA_main_var))
hist(Table_index$PCA_main_var)
p90 = quantile(na.omit(Table_index$PCA_main_var), 0.95)
p10 = quantile(na.omit(Table_index$PCA_main_var), 0.05)
# Eps arriba del percentil 75
unique(subset(Table_index,Table_index$PCA_main_var >= p90)$homo_code_eps)
unique(subset(Table_index,Table_index$PCA_main_var <= p10)$homo_code_eps)
# Eps arriba del percentil 75
unique(subset(Table_index,Table_index$PCA_main_var >= p90)$homo_code_eps)
unique(subset(Table_index,Table_index$PCA_main_var <= p10)$homo_code_eps)
columnas_modelos = c(64,65,92,93,94,63) # c( 63:65,67:71,74,76:79,81,83,84,86,87,56, 61, 94 ) #75,16
colnames(Table_index )[columnas_modelos ]
pc3_avg_table = aggregate_function(aggregate = 'AVG',
cols_to_agg = colnames(Table_index[,columnas_modelos]) ,
group_by =  colnames(Table_index)[1],
Tabla = Table_index)
table_1 <- table_wo_na (base = pc3_avg_table, cols_number = c(2:ncol(pc3_avg_table) ))
pca2=prcomp(table_1  ,   scale. = T,  rank. =1)
summary(pca2)
summary(pca1)
table_1 <- table_wo_na (base = pc2_avg_table, cols_number = c(2:ncol(pc2_avg_table) ))
pca1=prcomp(table_1  ,   scale. = T,  rank. =2)
summary(pca1)
colnames(Table_index )[columnas_salud ]
columnas_salud =  c(3,47,48,53,62)
colnames(Table_index )[columnas_salud ]
pc2_avg_table = aggregate_function(aggregate = 'AVG',
cols_to_agg = colnames(Table_index[,columnas_salud]) ,
group_by =  colnames(Table_index)[1],
Tabla = Table_index)
table_1 <- table_wo_na (base = pc2_avg_table, cols_number = c(2:ncol(pc2_avg_table) ))
# columnas_salud = c(62,3,4,6:10,13:18,20,22,23,25,26,60,56,95)
columnas_salud =  c(3,47,48,53,62)
colnames(Table_index )[columnas_salud ]
pc2_avg_table = aggregate_function(aggregate = 'AVG',
cols_to_agg = colnames(Table_index[,columnas_salud]) ,
group_by =  colnames(Table_index)[1],
Tabla = Table_index)
table_1 <- table_wo_na (base = pc2_avg_table, cols_number = c(2:ncol(pc2_avg_table) ))
pca1=prcomp(table_1  ,   scale. = T,  rank. =2)
summary(pca1)
# columnas_salud = c(62,3,4,6:10,13:18,20,22,23,25,26,60,56,95)
columnas_salud =  c( 4,47,48,53,62) #
colnames(Table_index )[columnas_salud ]
pc2_avg_table = aggregate_function(aggregate = 'AVG',
cols_to_agg = colnames(Table_index[,columnas_salud]) ,
group_by =  colnames(Table_index)[1],
Tabla = Table_index)
table_1 <- table_wo_na (base = pc2_avg_table, cols_number = c(2:ncol(pc2_avg_table) ))
pca1=prcomp(table_1  ,   scale. = T,  rank. =2)
summary(pca1)
colnames(Table_index )[columnas_salud ]
# columnas_salud = c(62,3,4,6:10,13:18,20,22,23,25,26,60,56,95)
columnas_salud =  c( 4,47,3,53,62) # 48
colnames(Table_index )[columnas_salud ]
pc2_avg_table = aggregate_function(aggregate = 'AVG',
cols_to_agg = colnames(Table_index[,columnas_salud]) ,
group_by =  colnames(Table_index)[1],
Tabla = Table_index)
table_1 <- table_wo_na (base = pc2_avg_table, cols_number = c(2:ncol(pc2_avg_table) ))
pca1=prcomp(table_1  ,   scale. = T,  rank. =2)
summary(pca1)
pc2_avg_table = aggregate_function(aggregate = 'MIN',
cols_to_agg = colnames(Table_index[,columnas_salud]) ,
group_by =  colnames(Table_index)[1],
Tabla = Table_index)
table_1 <- table_wo_na (base = pc2_avg_table, cols_number = c(2:ncol(pc2_avg_table) ))
pca1=prcomp(table_1  ,   scale. = T,  rank. =2)
summary(pca1)
pc2_avg_table = aggregate_function(aggregate = 'MAX',
cols_to_agg = colnames(Table_index[,columnas_salud]) ,
group_by =  colnames(Table_index)[1],
Tabla = Table_index)
table_1 <- table_wo_na (base = pc2_avg_table, cols_number = c(2:ncol(pc2_avg_table) ))
pca1=prcomp(table_1  ,   scale. = T,  rank. =2)
summary(pca1)
pc2_avg_table = aggregate_function(aggregate = 'MEAN',
cols_to_agg = colnames(Table_index[,columnas_salud]) ,
group_by =  colnames(Table_index)[1],
Tabla = Table_index)
table_1 <- table_wo_na (base = pc2_avg_table, cols_number = c(2:ncol(pc2_avg_table) ))
function (con, sql)
{
.Call(`_RSQLite_result_create`, con, sql)
}
# columnas_salud = c(62,3,4,6:10,13:18,20,22,23,25,26,60,56,95)
columnas_salud =  c( 4,47,3,53,62) # 48
colnames(Table_index )[columnas_salud ]
pc2_avg_table = aggregate_function(aggregate = 'MEAN',
cols_to_agg = colnames(Table_index[,columnas_salud]) ,
group_by =  colnames(Table_index)[1],
Tabla = Table_index)
pc2_avg_table = aggregate_function(aggregate = 'AVG',
cols_to_agg = colnames(Table_index[,columnas_salud]) ,
group_by =  colnames(Table_index)[1],
Tabla = Table_index)
table_1 <- table_wo_na (base = pc2_avg_table, cols_number = c(2:ncol(pc2_avg_table) ))
pca1=prcomp(table_1  ,   scale. = T,  rank. =2)
summary(pca1)
# columnas_salud = c(62,3,4,6:10,13:18,20,22,23,25,26,60,56,95)
columnas_salud =  c( 4,47,53,62) # 48
# columnas_salud = c(62,3,4,6:10,13:18,20,22,23,25,26,60,56,95)
columnas_salud =  c( 4,47,53,62) # 48
colnames(Table_index )[columnas_salud ]
pc2_avg_table = aggregate_function(aggregate = 'AVG',
cols_to_agg = colnames(Table_index[,columnas_salud]) ,
group_by =  colnames(Table_index)[1],
Tabla = Table_index)
table_1 <- table_wo_na (base = pc2_avg_table, cols_number = c(2:ncol(pc2_avg_table) ))
pca1=prcomp(table_1  ,   scale. = T,  rank. =2)
summary(pca1)
# columnas_salud = c(62,3,4,6:10,13:18,20,22,23,25,26,60,56,95)
columnas_salud =  c(3, 4,47,53,62) # 48
colnames(Table_index )[columnas_salud ]
pc2_avg_table = aggregate_function(aggregate = 'AVG',
cols_to_agg = colnames(Table_index[,columnas_salud]) ,
group_by =  colnames(Table_index)[1],
Tabla = Table_index)
table_1 <- table_wo_na (base = pc2_avg_table, cols_number = c(2:ncol(pc2_avg_table) ))
pca1=prcomp(table_1  ,   scale. = T,  rank. =2)
summary(pca1)
Table_index = Table_index[, c(1:95)]
# columnas_salud = c(62,3,4,6:10,13:18,20,22,23,25,26,60,56,95)
columnas_salud =  c(3, 4,47,53,62) # 48
colnames(Table_index )[columnas_salud ]
pc2_avg_table = aggregate_function(aggregate = 'AVG',
cols_to_agg = colnames(Table_index[,columnas_salud]) ,
group_by =  colnames(Table_index)[1],
Tabla = Table_index)
table_1 <- table_wo_na (base = pc2_avg_table, cols_number = c(2:ncol(pc2_avg_table) ))
pca1=prcomp(table_1  ,   scale. = T,  rank. =2)
summary(pca1)
Table_index   = cbind(Table_index , predict(pca1, Table_index) )
Table_index = Table_index[, c(1:95)]
# columnas_salud = c(62,3,4,6:10,13:18,20,22,23,25,26,60,56,95)
columnas_salud =  c(3, 4,47,53,62) # 48
colnames(Table_index )[columnas_salud ]
pc2_avg_table = aggregate_function(aggregate = 'AVG',
cols_to_agg = colnames(Table_index[,columnas_salud]) ,
group_by =  colnames(Table_index)[1],
Tabla = Table_index)
table_1 <- table_wo_na (base = pc2_avg_table, cols_number = c(2:ncol(pc2_avg_table) ))
pca1=prcomp(table_1  ,   scale. = T,  rank. =1)
summary(pca1)
Table_index   = cbind(Table_index , predict(pca1, Table_index) )
colnames(Table_index)[ncol(Table_index)] = 'PCA_main_var'
hist(Table_index$PCA_main_var)
summary(Table_index$PCA_main_var)
### max 5 min 5
Table_index$PCA_main_var = ifelse(Table_index$PCA_main_var  <=- 3,-3, Table_index$PCA_main_var)
hist(Table_index$PCA_main_var)
summary(Table_index$PCA_main_var)
Table_index$PCA_main_var = ifelse(Table_index$PCA_main_var  >= 3,3, Table_index$PCA_main_var)
summary(Table_index$PCA_main_var)
hist(Table_index$PCA_main_var)
p90 = quantile(na.omit(Table_index$PCA_main_var), 0.95)
p10 = quantile(na.omit(Table_index$PCA_main_var), 0.05)
# Eps arriba del percentil 75
unique(subset(Table_index,Table_index$PCA_main_var >= p90)$homo_code_eps)
unique(subset(Table_index,Table_index$PCA_main_var <= p10)$homo_code_eps)
colnames(Table_index )[columnas_salud ]
columnas_modelos = c(64,65,92,94,63) # c( 63:65,67:71,74,76:79,81,83,84,86,87,56, 61, 94 ) #75,16
colnames(Table_index )[columnas_modelos ]
Table_index = Table_index[, c(1:62)]
var_calidad = c(62,3:30, 47:48,53,60)
colnames(Table_index) [c(32,34:46,56)]
summary(Table_index[[56]])
Table_index[[2]] = as.character(Table_index[[2]] )
for (i in var_calidad) {
print("/------------------------------------------/")
Y_var = colnames(Table_index)[i]
print(paste0("El modelo de la variable " , Y_var, " se creara"))
X =  Table_index[,c(i,2, 32,34:46 )]  # 56,57,58,59,61
X[[1]] = ifelse(X[[1]] == Inf, NA, X[[1]])
X= na.omit(X)
colnames(X)[1] = 'Y'
tryCatch( {
mod = lm(data = X , Y~.)
print(summary(mod))
Table_index$Pred= predict(mod, Table_index)
colnames(Table_index)[ncol(Table_index)] = paste0(Y_var,'_hat')
},
error=function(e){ cat("ERROR CATCH: ",conditionMessage(e), "\n")}
)
}
colnames(Table_index) [c(32,34:46,56)]
summary(Table_index[[56]])
# library(modelsummary)
# modelsummary(mod, statistic = c("t = {statistic}",
#                                 "se = {std.error}",
#                                 "conf.int"))
# # ?modelsummary
# avg_table = aggregate_function(aggregate = 'avg',
#                                 cols_to_agg = colnames(fech_liqui)[2]  ,
#                                 group_by = colnames(fech_liqui)[3] ,
#                                 Tabla = fech_liqui)
##################################################
Table_index[[2]] = as.numeric(Table_index[[2]])
colnames(Table_index)[c(31,32,34:46)]
cols_asegurados = colnames(Table_index[,c(32,34:46)]) # 31 ,50,51,55
pc1_avg_table = aggregate_function(aggregate = 'avg',
cols_to_agg = cols_asegurados  ,
group_by =  colnames(Table_index)[c(1)],
Tabla = Table_index)
table_1 <- table_wo_na (base = pc1_avg_table, cols_number = c(2:ncol(pc1_avg_table) ))
PCA_asegurados=prcomp(table_1  ,   scale. = T,  rank. =1)
summary(PCA_asegurados)
hist(PCA_asegurados$x)
Table_index   = cbind(Table_index , predict(PCA_asegurados, Table_index) )
colnames(Table_index)[ncol(Table_index)] = 'PCA_caract_aseg'
Table_index = Table_index[, c(1:96)]
# columnas_salud = c(62,3,4,6:10,13:18,20,22,23,25,26,60,56,95)
columnas_salud =  c(3, 4,47,53,62) # 48
colnames(Table_index )[columnas_salud ]
colnames(Table_index )
Table_index = Table_index[, c(1:96)]
# columnas_salud = c(62,3,4,6:10,13:18,20,22,23,25,26,60,56,95)
columnas_salud =  c(3, 4,47,53,62) # 48
colnames(Table_index )[columnas_salud ]
pc2_avg_table = aggregate_function(aggregate = 'AVG',
cols_to_agg = colnames(Table_index[,columnas_salud]) ,
group_by =  colnames(Table_index)[1],
Tabla = Table_index)
table_1 <- table_wo_na (base = pc2_avg_table, cols_number = c(2:ncol(pc2_avg_table) ))
pca1=prcomp(table_1  ,   scale. = T,  rank. =1)
summary(pca1)
Table_index   = cbind(Table_index , predict(pca1, Table_index) )
colnames(Table_index)[ncol(Table_index)] = 'PCA_main_var'
hist(Table_index$PCA_main_var)
summary(Table_index$PCA_main_var)
### max 5 min 5
Table_index$PCA_main_var = ifelse(Table_index$PCA_main_var  <=- 3,-3, Table_index$PCA_main_var)
Table_index$PCA_main_var = ifelse(Table_index$PCA_main_var  >= 3,3, Table_index$PCA_main_var)
hist(Table_index$PCA_main_var)
columnas_modelos = c(64,65,92,94,63) # c( 63:65,67:71,74,76:79,81,83,84,86,87,56, 61, 94 ) #75,16
colnames(Table_index )[columnas_modelos ]
pc3_avg_table = aggregate_function(aggregate = 'AVG',
cols_to_agg = colnames(Table_index[,columnas_modelos]) ,
group_by =  colnames(Table_index)[1],
Tabla = Table_index)
table_1 <- table_wo_na (base = pc3_avg_table, cols_number = c(2:ncol(pc3_avg_table) ))
pca2=prcomp(table_1  ,   scale. = T,  rank. =1)
summary(pca2)
Table_index   = cbind(Table_index , predict(pca2, Table_index) )
colnames(Table_index)[ncol(Table_index)] = 'PCA_main_hat_var'
#Analisis
hist(Table_index$PCA_main_hat_var)
summary(Table_index$PCA_main_hat_var)
Table_index$PCA_main_hat_var = ifelse(Table_index$PCA_main_hat_var <= -4,-4,Table_index$PCA_main_hat_var)
hist(Table_index$PCA_main_hat_var)
Table_index$PCA_main_hat_var = ifelse(Table_index$PCA_main_hat_var >= 4,4,Table_index$PCA_main_hat_var)
hist(Table_index$PCA_main_hat_var)
p90 = quantile(na.omit(Table_index$PCA_main_hat_var), 0.95)
p10 = quantile(na.omit(Table_index$PCA_main_hat_var), 0.05)
# Eps arriba del percentil 75
unique(subset(Table_index,Table_index$PCA_main_hat_var >= p90)$homo_code_eps)
unique(subset(Table_index,Table_index$PCA_main_hat_var <= p10)$homo_code_eps)
######################################################
library(ggplot2)
library(corrplot)
hist(Table_index[['PCA_main_var']], main = colnames(Table_index)['PCA_main_var'] )
hist(Table_index[['PCA_main_hat_var']], main = colnames(Table_index)['PCA_main_hat_var'] )
Tabla_corr = na.omit(Table_index[,c(63,62,95:97)])
M3 = cor(na.omit(Tabla_corr))
m3= data.frame(M3)
View(m3)
Tabla_corr = na.omit(Table_index[,c(63,62,95:98)])
M3 = cor(na.omit(Tabla_corr))
m3= data.frame(M3)
corrplot(M3, method = 'number')
summary(m3$PCA_caract_aseg)
### max 5 min 5
Table_index$PCA_main_var =Table_index$PCA_main_var*-1
Table_index$PCA_caract_aseg =Table_index$PCA_caract_aseg*-1
Table_index$PCA_main_hat_var = Table_index$PCA_main_hat_var*-1
Tabla_corr = na.omit(Table_index[,c(63,62,95:98)])
M3 = cor(na.omit(Tabla_corr))
m3= data.frame(M3)
corrplot(M3, method = 'number')
Table_index$PCA_caract_aseg =Table_index$PCA_caract_aseg*-1
Tabla_corr = na.omit(Table_index[,c(63,62,95:98)])
M3 = cor(na.omit(Tabla_corr))
m3= data.frame(M3)
corrplot(M3, method = 'number')
hist(Table_index$PCA_caract_aseg )
# Table_index$PCA_caract_aseg = -1*Table_index$PCA_caract_aseg
#######
write.csv2(Table_index, paste0(path_output, "quality_eps_data.csv" ) , row.names = F)
mod = lm(data = X , log(  100*(Y +1) )~
CONTRIBUTIVO + COMUNIDADES_INDIGENAS
+FEMENINO + De_0_a_9 + De_10_a_19 +
De_20_a_29 + De_30_a_39 +
De_40_a_49 + De_50_a_59 +
De_60_a_69+ De_70_a_79
#+ factor(ANIO_)
)
hist(Table_index[[62]])
Y_var = colnames(Table_index)[62]
X =  Table_index[,c(62,2,32,35, 37:46)]
colnames(X)[1] = 'Y'
X =  Table_index[,c(2,62,32,34:46)]
mod = lm(data = X , log(  100*(Y +1) )~
CONTRIBUTIVO + COMUNIDADES_INDIGENAS
+FEMENINO + De_0_a_9 + De_10_a_19 +
De_20_a_29 + De_30_a_39 +
De_40_a_49 + De_50_a_59 +
De_60_a_69+ De_70_a_79
#+ factor(ANIO_)
)
hist(Table_index[[62]])
Y_var = colnames(Table_index)[62]
X =  Table_index[,c(62,2,32,35, 37:46)]
colnames(X)[1] = 'Y'
X =  Table_index[,c(2,62,32,34:46)]
X =  Table_index[,c(62,2,32,35, 37:46)]
colnames(X)[1] = 'Y'
mod = lm(data = X , log(  100*(Y +1) )~
CONTRIBUTIVO + COMUNIDADES_INDIGENAS
+FEMENINO + De_0_a_9 + De_10_a_19 +
De_20_a_29 + De_30_a_39 +
De_40_a_49 + De_50_a_59 +
De_60_a_69+ De_70_a_79
#+ factor(ANIO_)
)
summary(mod)
Table_index = Table_index[, c(1:62)]
var_calidad = c(62,3:30, 47:48,53,60)
colnames(Table_index) [c(32,34:46,56)]
summary(Table_index[[56]])
for (i in var_calidad) {
print("/------------------------------------------/")
Y_var = colnames(Table_index)[i]
print(paste0("El modelo de la variable " , Y_var, " se creara"))
X =  Table_index[,c(i, 32,34:46 )]  # 56,57,58,59,61
X[[1]] = ifelse(X[[1]] == Inf, NA, X[[1]])
X= na.omit(X)
colnames(X)[1] = 'Y'
tryCatch( {
mod = lm(data = X , Y~.)
print(summary(mod))
Table_index$Pred= predict(mod, Table_index)
colnames(Table_index)[ncol(Table_index)] = paste0(Y_var,'_hat')
},
error=function(e){ cat("ERROR CATCH: ",conditionMessage(e), "\n")}
)
}
pc1_avg_table = aggregate_function(aggregate = 'avg',
cols_to_agg = cols_asegurados  ,
group_by =  colnames(Table_index)[c(1)],
Tabla =
subset(Table_index, is.na(Table_index$deaths_percentage_group)==  F))
table_1 <- table_wo_na (base = pc1_avg_table, cols_number = c(2:ncol(pc1_avg_table) ))
PCA_asegurados=prcomp(table_1  ,   scale. = T,  rank. =1)
summary(PCA_asegurados)
hist(PCA_asegurados$x)
Table_index   = cbind(Table_index , predict(PCA_asegurados, Table_index) )
colnames(Table_index)[ncol(Table_index)] = 'PCA_caract_aseg'
hist(Table_index$PCA_caract_aseg)
### Analisis
summary(hist(Table_index$PCA_caract_aseg))
### Analisis
summary((Table_index$PCA_caract_aseg))
under_sampling = subset(Table_index, is.na(Table_index$deaths_percentage_group)==  F)
pc1_avg_table = aggregate_function(aggregate = 'avg',
cols_to_agg = cols_asegurados  ,
group_by =  colnames(Table_index)[c(1)],
Tabla = under_sampling  )
table_1 <- table_wo_na (base = pc1_avg_table, cols_number = c(2:ncol(pc1_avg_table) ))
pc2_avg_table = aggregate_function(aggregate = 'AVG',
cols_to_agg = colnames(Table_index[,columnas_salud]) ,
group_by =  colnames(Table_index)[1],
Tabla = under_sampling)
table_1 <- table_wo_na (base = pc2_avg_table, cols_number = c(2:ncol(pc2_avg_table) ))
pca1=prcomp(table_1  ,   scale. = T,  rank. =1)
summary(pca1)
Table_index   = cbind(Table_index , predict(pca1, Table_index) )
colnames(Table_index)[ncol(Table_index)] = 'PCA_main_var'
hist(Table_index$PCA_main_var)
summary(Table_index$PCA_main_var)
hist(Table_index$PCA_main_var)
p90 = quantile(na.omit(Table_index$PCA_main_var), 0.95)
p10 = quantile(na.omit(Table_index$PCA_main_var), 0.05)
# Eps arriba del percentil 75
unique(subset(Table_index,Table_index$PCA_main_var >= p90)$homo_code_eps)
unique(subset(Table_index,Table_index$PCA_main_var <= p10)$homo_code_eps)
columnas_modelos = c(64,65,92,94,63) # c( 63:65,67:71,74,76:79,81,83,84,86,87,56, 61, 94 ) #75,16
colnames(Table_index )[columnas_modelos ]
pc3_avg_table = aggregate_function(aggregate = 'AVG',
cols_to_agg = colnames(Table_index[,columnas_modelos]) ,
group_by =  colnames(Table_index)[1],
Tabla = under_sampling)
table_1 <- table_wo_na (base = pc3_avg_table, cols_number = c(2:ncol(pc3_avg_table) ))
pca2=prcomp(table_1  ,   scale. = T,  rank. =1)
summary(pca2)
Table_index   = cbind(Table_index , predict(pca2, Table_index) )
colnames(Table_index)[ncol(Table_index)] = 'PCA_main_hat_var'
#Analisis
hist(Table_index$PCA_main_hat_var)
summary(Table_index$PCA_main_hat_var)
Tabla_corr = na.omit(Table_index[,c(63,62,95:98)])
M3 = cor(na.omit(Tabla_corr))
m3= data.frame(M3)
corrplot(M3, method = 'number')
Tabla_corr = na.omit(Table_index[,c(63,62,96:98)])
M3 = cor(na.omit(Tabla_corr))
m3= data.frame(M3)
corrplot(M3, method = 'number')
Tabla_corr = na.omit(Table_index[,c(63,98,62,96,97)])
M3 = cor(na.omit(Tabla_corr))
m3= data.frame(M3)
corrplot(M3, method = 'number')
summary(m3$PCA_caract_aseg)
hist(Table_index[['PCA_main_var']], main = colnames(Table_index)['PCA_main_var'] )
hist(Table_index[['PCA_main_hat_var']], main = colnames(Table_index)['PCA_main_hat_var'] )
hist(Table_index[['PCA_caract_aseg']], main = colnames(Table_index)['PCA_main_hat_var'] )
Table_index$PCA_main_hat_var = Table_index$PCA_main_hat_var*-1
Table_index$PCA_main_var = Table_index$PCA_main_var*-1
hist(Table_index[['PCA_main_var']], main = colnames(Table_index)['PCA_main_var'] )
hist(Table_index[['PCA_main_hat_var']], main = colnames(Table_index)['PCA_main_hat_var'] )
hist(Table_index[['PCA_caract_aseg']], main = colnames(Table_index)['PCA_main_hat_var'] )
hist(Table_index[['PCA_main_var']], main = colnames(Table_index)['PCA_main_var'] )
hist(Table_index[['PCA_main_hat_var']], main = colnames(Table_index)['PCA_main_hat_var'] )
Tabla_corr = na.omit(Table_index[,c(63,98,62,96,97)])
M3 = cor(na.omit(Tabla_corr))
m3= data.frame(M3)
corrplot(M3, method = 'number')
save.image("C:/Users/USER/OneDrive - Pontificia Universidad Javeriana/02_UPJ 2020/Semestre 5/banrep/Code/BANREP/.RData")
