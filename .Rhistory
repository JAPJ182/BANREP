install.packages(rio)
### Libraries
lista = c('readr','readxl',
'rio' , 'arrow'
)
for (i in 1:length(lista) ) {
if(lista[i] %in% rownames(installed.packages()) == FALSE) {
install.packages(lista[i])
}
lapply(lista[i], library, character.only = TRUE)
}
data = rio::import(url)
data = rio::import(Ind_calidad_EPS_2015)
Ind_calidad_EPS_2015 = "https://docs.supersalud.gov.co/PortalWeb/SupervisionInstitucional/IndicadoresCalidadEAPB/Indicadores%20de%20Calidad%20EPS%20(I%20Semestre%202015).xlsx"
### Libraries
lista = c('readr','readxl',
'rio' , 'arrow'
)
for (i in 1:length(lista) ) {
if(lista[i] %in% rownames(installed.packages()) == FALSE) {
install.packages(lista[i])
}
lapply(lista[i], library, character.only = TRUE)
}
data = rio::import(Ind_calidad_EPS_2015)
View(data)
?rio::import
?readxl
excel_sheets(Ind_calidad_EPS_2015)
excel_sheets( rio::import(Ind_calidad_EPS_2015))
data = rio::import(Ind_calidad_EPS_2015,excel_sheets( ))
Ind_calidad_EPS_2015 = rio::import(Ind_calidad_EPS_2015, sheet = "Hoja de Trabajo")
View(Ind_calidad_EPS_2015)
prefix = "https://docs.supersalud.gov.co/PortalWeb/SupervisionInstitucional/IndicadoresCalidadEAPB/"
### URL libraries
Ind_calidad_EPS_2015 = "Indicadores%20de%20Calidad%20EPS%20(I%20Semestre%202015).xlsx"
Ind_calidad_EPS_2016 = "Indicadores%20de%20Calidad%20EPS%20(ISemestre%202016).xlsx"
Ind_calidad_EPS_2014 = "Indicadores-Calidad-EPS-Consolidado-2014.xlsx"
Ind_calidad_EPS_2013 = "Indicadores-Calidad-EPS-Consolidado-2013.xlsx"
Ind_calidad_EPS_2012 = "Indicadores-Calidad-EPS-consolidado-2012.xlsx"
Ind_calidad_EPS_2011 = "Indicadores-Calidad-EPS-consolidado-2011.xlsx"
Ind_calidad_EPS_2010 = "Indicadores-Calidad-EPS-consolidado-2010.xlsx"
Ind_calidad_EPS_2009 = "Indicadores-Calidad-EPS-Consolidado-2009.xlsx"
lista = c("calidad_eps_2009", "calidad_eps_2010",
"calidad_eps_2011", "calidad_eps_2012",
"calidad_eps_2013", "calidad_eps_2014",
"calidad_eps_2015",  "calidad_eps_2016"
)
for (i in lista) {
list2env(
lapply(setNames(i ),
rio::import), envir = .GlobalEnv)
}
}
for (i in lista) {
url = paste0(prefix, i)
assign( i ,
rio::import(url, sheet = "Hoja de Trabajo"),
envir = .GlobalEnv)
print(i)
}
i ="calidad_eps_2009"
url = paste0(prefix, i)
assign( i ,
rio::import(url, sheet = "Hoja de Trabajo"),
envir = .GlobalEnv)
i ="calidad_eps_2009"
url = paste0(prefix, i)
assign(rio::import(url, sheet = "Hoja de Trabajo"),i ,
envir = .GlobalEnv)
print(i)
url
assign(x = i,
value = rio::import(url, sheet = "Hoja de Trabajo"),
envir = .GlobalEnv)
assign(value = i,
x = rio::import(url, sheet = "Hoja de Trabajo"),
envir = .GlobalEnv)
assign(value = i,
x = rio::import(url, sheet = "Hoja de Trabajo", format ="xlsx"),
envir = .GlobalEnv)
assign(x = i,
value = rio::import(url, sheet = "Hoja de Trabajo", format ="xlsx"),
envir = .GlobalEnv)
assign(x = i,
value = rio::import(url, sheet = "HOJA DE TRABAJO", format ="xlsx"),
envir = .GlobalEnv)
assign(x = i,
value = rio::import(url, sheet = "Hoja de Trabajo", format ="xlsx"),
envir = .GlobalEnv)
get("calidad_eps_2009")
i = "calidad_eps_2009"
TABLA =get(i)
TABLA =get0(i)
get0(i)
get(i)
for (i in 1:length(lista) ) {
if(lista[i] %in% rownames(installed.packages()) == FALSE) {
install.packages(lista[i])
}
lapply(lista[i], library, character.only = TRUE)
}
### Libraries
lista = c('readr','readxl',
'rio' , 'arrow'
)
for (i in 1:length(lista) ) {
if(lista[i] %in% rownames(installed.packages()) == FALSE) {
install.packages(lista[i])
}
lapply(lista[i], library, character.only = TRUE)
}
prefix = "https://docs.supersalud.gov.co/PortalWeb/SupervisionInstitucional/IndicadoresCalidadEAPB/"
### URL libraries
calidad_eps_2015 = "Indicadores%20de%20Calidad%20EPS%20(I%20Semestre%202015).xlsx"
calidad_eps_2016 = "Indicadores%20de%20Calidad%20EPS%20(ISemestre%202016).xlsx"
calidad_eps_2014 = "Indicadores-Calidad-EPS-Consolidado-2014.xlsx"
calidad_eps_2013 = "Indicadores-Calidad-EPS-Consolidado-2013.xlsx"
calidad_eps_2012 = "Indicadores-Calidad-EPS-consolidado-2012.xlsx"
calidad_eps_2011 = "Indicadores-Calidad-EPS-consolidado-2011.xlsx"
calidad_eps_2010 = "Indicadores-Calidad-EPS-consolidado-2010.xlsx"
calidad_eps_2009 = "Indicadores-Calidad-EPS-Consolidado-2009.xlsx"
lista = c("calidad_eps_2009", "calidad_eps_2010",
"calidad_eps_2011", "calidad_eps_2012",
"calidad_eps_2013", "calidad_eps_2014",
"calidad_eps_2015",  "calidad_eps_2016"
)
get(i)
i = "calidad_eps_2009"
get(i)
url = paste0(prefix, tabla)
assign(rio::import(url,
sheet =hoja),i ,
envir = .GlobalEnv)
hoja =  "Hoja de Trabajo"
assign(i,rio::import(url,  sheet =hoja) , envir = .GlobalEnv)
print(i)
url
paste0(prefix, tabla)
tabla = get(i)
paste0(prefix, tabla)
url = paste0(prefix, tabla)
url
assign(i,rio::import(url,  sheet =hoja) , envir = .GlobalEnv)
lista = data.frame(
'tabla' = c("calidad_eps_2009", "calidad_eps_2010",
"calidad_eps_2011", "calidad_eps_2012",
"calidad_eps_2013", "calidad_eps_2014",
"calidad_eps_2015",  "calidad_eps_2016"
),
'sheet' = c("Hoja de Trabajo", "Hoja de Trabajo",
"Hoja de Trabajo", "Hoja de Trabajo",
"Hoja de Trabajo", "Hoja de Trabajo",
"Hoja de Trabajo",  "HOJA DE TRABAJO"
)
)
unique(lista$tabla)
nrow(lista)
i=2
lista(i, 1)
lista[i, 1]
lista[i, 1
pre_tabla = lista[i, 1]
lista[i, 1]
pre_tabla = lista[i, 1]
tabla = get(pre_tabla)
hoja = lista[i, 2]
url = paste0(prefix, tabla)
assign(i,rio::import(url,  sheet =hoja) , envir = .GlobalEnv)
assign(pre_tabla,rio::import(url,  sheet =hoja) , envir = .GlobalEnv)
for (i in 1:nrow(lista) ) {
pre_tabla = lista[i, 1]
tabla = get(pre_tabla)
hoja = lista[i, 2]
url = paste0(prefix, tabla)
assign(pre_tabla,rio::import(url,  sheet =hoja) , envir = .GlobalEnv)
print(pre_tabla)
}
### Libraries
lista = c('readr','readxl',
'rio' , 'arrow'
)
for (i in 1:length(lista) ) {
if(lista[i] %in% rownames(installed.packages()) == FALSE) {
install.packages(lista[i])
}
lapply(lista[i], library, character.only = TRUE)
}
prefix = "https://docs.supersalud.gov.co/PortalWeb/SupervisionInstitucional/IndicadoresCalidadEAPB/"
### URL libraries
calidad_eps_2015 = "Indicadores%20de%20Calidad%20EPS%20(I%20Semestre%202015).xlsx"
calidad_eps_2016 = "Indicadores%20de%20Calidad%20EPS%20(ISemestre%202016).xlsx"
calidad_eps_2014 = "Indicadores-Calidad-EPS-Consolidado-2014.xlsx"
calidad_eps_2013 = "Indicadores-Calidad-EPS-Consolidado-2013.xlsx"
calidad_eps_2012 = "Indicadores-Calidad-EPS-consolidado-2012.xlsx"
calidad_eps_2011 = "Indicadores-Calidad-EPS-consolidado-2011.xlsx"
calidad_eps_2010 = "Indicadores-Calidad-EPS-consolidado-2010.xlsx"
calidad_eps_2009 = "Indicadores-Calidad-EPS-Consolidado-2009.xlsx"
lista = data.frame(
'tabla' = c("calidad_eps_2009", "calidad_eps_2010",
"calidad_eps_2011", "calidad_eps_2012",
"calidad_eps_2013", "calidad_eps_2014",
"calidad_eps_2015",  "calidad_eps_2016"
),
'sheet' = c("Hoja de Trabajo", "Hoja de Trabajo",
"Hoja de Trabajo", "Hoja de Trabajo",
"Hoja de Trabajo", "Hoja de Trabajo",
"Hoja de Trabajo",  "HOJA DE TRABAJO"
)
)
for (i in 1:nrow(lista) ) {
pre_tabla = lista[i, 1]
tabla = get(pre_tabla)
hoja = lista[i, 2]
url = paste0(prefix, tabla)
assign(pre_tabla,rio::import(url,  sheet =hoja) , envir = .GlobalEnv)
print(pre_tabla)
}
lista = c('readr','readxl',
'rio' , 'arrow', 'sqldf'
)
for (i in 1:length(lista) ) {
if(lista[i] %in% rownames(installed.packages()) == FALSE) {
install.packages(lista[i])
}
lapply(lista[i], library, character.only = TRUE)
}
sqldf::sqldf("
SELECT VALOR FROM calidad_eps_20*
")
sqldf::sqldf("
SELECT VALOR FROM calidad_eps_20
")
packageList<-c("olapR", "foreign", "tidyverse","xlsx","haven","beepr")
for (i in 1:length(packageList) ) {
if(packageList[i] %in% rownames(installed.packages()) == FALSE) {
install.packages(packageList[i])
}
lapply(packageList[i], library, character.only = TRUE)
}
packageList<-c("olapR", "foreign", "tidyverse","xlsx","haven","beepr")
for (i in 1:length(packageList) ) {
if(packageList[i] %in% rownames(installed.packages()) == FALSE) {
install.packages(packageList[i])
}
lapply(packageList[i], library, character.only = TRUE)
}
rm(list = ls())
packageList<-c("olapR", "foreign", "tidyverse","xlsx","haven","beepr")
for (i in 1:length(packageList) ) {
if(packageList[i] %in% rownames(installed.packages()) == FALSE) {
install.packages(packageList[i])
}
lapply(packageList[i], library, character.only = TRUE)
}
library(xlsx)
wd <- "C:/Users/mcard/Dropbox/c_2020_More than a Healing/Data/"
packageList<-c("olapR", "foreign", "tidyverse","haven","beepr")
for (i in 1:length(packageList) ) {
if(packageList[i] %in% rownames(installed.packages()) == FALSE) {
install.packages(packageList[i])
}
lapply(packageList[i], library, character.only = TRUE)
}
cnnstr<-"Provider=MSOLAP;Password=u4_gu41n14;Persist Security Info=True;User ID=sispro.local\\UA_Guainia;Data Source=cubos.sispro.gov.co"
olapCnn<-OlapConnection(cnnstr)
qry <- Query(validate = TRUE)
qry
explore(olapCnn)
?execute2D
sources <- explore(olapCnn)
results <- list(execute2D(olapCnn,mdx))
sources <- list(explore(olapCnn))
View(sources)
sources[[1]]
sources <- extract(explore(olapCnn))
print(explore(olapCnn))
as.data.frame(print(explore(olapCnn)))
?explore
explore(olapCnn)
sqlquery <- " SELECT NON EMPTY {[Measures].[ValorIndicador]}
ON COLUMNS ,
NON EMPTY {
Hierarchize({DrilldownLevel({[Administradoras].[Codigo de Administradora].CHILDREN},,,INCLUDE_CALC_MEMBERS)})
*Hierarchize({DrilldownLevel({[Causas de Morbilidad].[Gran Causa].CHILDREN},,,INCLUDE_CALC_MEMBERS)})
*Hierarchize({DrilldownLevel({[Tiempo].[Mes].CHILDREN},,,INCLUDE_CALC_MEMBERS)})
*Hierarchize({DrilldownLevel({[Municipio Residencia - RIPS].[Codigo Municipio].CHILDREN},,,INCLUDE_CALC_MEMBERS)})
}
DIMENSION PROPERTIES MEMBER_CAPTION ON 1
FROM [PER - Registro Discapacidad - RIPS]
WHERE ([Tiempo].[AÃ±o].&['2015'])
CELL PROPERTIES VALUE, FORMAT_STRING "
results <- execute2D(olapCnn,sqlquery)
sqlquery <- " SELECT NON EMPTY {[Measures].[ValorIndicador]}
ON COLUMNS ,
NON EMPTY {
Hierarchize({DrilldownLevel({[Administradoras].[Codigo de Administradora]},,,INCLUDE_CALC_MEMBERS)})
*Hierarchize({DrilldownLevel({[Causas de Morbilidad].[Gran Causa].CHILDREN},,,INCLUDE_CALC_MEMBERS)})
*Hierarchize({DrilldownLevel({[Tiempo].[Mes].CHILDREN},,,INCLUDE_CALC_MEMBERS)})
*Hierarchize({DrilldownLevel({[Municipio Residencia - RIPS].[Codigo Municipio].CHILDREN},,,INCLUDE_CALC_MEMBERS)})
}
DIMENSION PROPERTIES MEMBER_CAPTION ON 1
FROM [PER - Registro Discapacidad - RIPS]
WHERE ([Tiempo].[AÃ±o].&['2015'])
CELL PROPERTIES VALUE, FORMAT_STRING "
results <- execute2D(olapCnn,sqlquery)
########### Listing cubes ###########
explore(olapCnn)
source_olap <- c("PER - Registro de Discapacidad",
"PER - Registro Discapacidad - RIPS",
"PER - Registro Discapacidad - RUAF",
"PER - Registro Discapacidad PILA")
source_olap[2]
source_connection <- source_olap[2]
qry <- Query()
paste0("[",source_connection,"]" )
cube(qry) <- paste0("[",source_connection,"]" )
cnnstr <- "Data Source=localhost; Provider=MSOLAP;"
olapCnnw2 <- OlapConnection(cnnstr)
qry <- Query()
cube(qry) <- "[Analysis Services Tutorial]"
columns(qry) <- c("[Measures].[Internet Sales Count]", "[Measures].[Internet Sales-Sales Amount]")
rows(qry) <- c("[Product].[Product Line].[Product Line].MEMBERS")
pages(qry) <- c("[Sales Territory].[Sales Territory Region].[Sales Territory Region].MEMBERS")
result1 <- executeMD(olapCnnw2, qry)
cube(qry) <- paste0("[",source_connection,"]" )
columns(qry) <- c(  "[Administradoras].[Nombre de Administradora]")
rows(qry) <- c("[Causas de Morbilidad].[Gran Causa]", "[Municipio Residencia - RIPS].[Codigo Municipio]")
slicers(qry) <- c("[Tiempo].[AÃ±o].['2015']")
# pages(qry) <-  c("[Measures].[Internet Sales Count]", "[Measures].[Internet Sales-Sales Amount]")
print(compose(qry))
cube(qry) <- paste0("[",source_connection,"]" )
columns(qry) <- c(  "[Administradoras].[Nombre de Administradora]")
rows(qry) <- c("[Causas de Morbilidad].[Gran Causa]", "[Municipio Residencia - RIPS].[Codigo Municipio]")
slicers(qry) <- c("[Tiempo].[AÃ±o].['2015']")
# pages(qry) <-  c("[Measures].[Internet Sales Count]", "[Measures].[Internet Sales-Sales Amount]")
print(compose(qry))
qry <- Query()
cube(qry) <- paste0("[",source_connection,"]" )
columns(qry) <- c(  "[Administradoras].[Nombre de Administradora]")
rows(qry) <- c("[Causas de Morbilidad].[Gran Causa]", "[Municipio Residencia - RIPS].[Codigo Municipio]")
axis(qry) <- c("[Tiempo].[AÃ±o]")
?axis
qry <- Query()
cube(qry) <- paste0("[",source_connection,"]" )
columns(qry) <- c(  "[Administradoras].[Nombre de Administradora]")
rows(qry) <- c("[Causas de Morbilidad].[Gran Causa]", "[Municipio Residencia - RIPS].[Codigo Municipio]")
slicers(qry) <- c("[Tiempo].[AÃ±o].['2015']")
# pages(qry) <-  c("[Measures].[Internet Sales Count]", "[Measures].[Internet Sales-Sales Amount]")
print(compose(qry))
qry <- Query()
cube(qry) <- paste0("[",source_connection,"]" )
columns(qry) <- c(  "[Administradoras].[Nombre de Administradora]")
# pages(qry) <-  c("[Measures].[Internet Sales Count]", "[Measures].[Internet Sales-Sales Amount]")
print(compose(qry))
cube(qry) <- paste0("[",source_connection,"]" )
rows(qry) <- c("[Causas de Morbilidad].[Gran Causa]", "[Municipio Residencia - RIPS].[Codigo Municipio]")
cube(qry) <- ("[PER - Registro de Discapacidad]" )
columns(qry) <- c(  "[Administradoras].[Nombre de Administradora]")
rows(qry) <- c("[Causas de Morbilidad].[Gran Causa]", "[Municipio Residencia - RIPS].[Codigo Municipio]")
# pages(qry) <-  c("[Measures].[Internet Sales Count]", "[Measures].[Internet Sales-Sales Amount]")
print(compose(qry))
columns(qry) <- c(  "[Administradoras].[Nombre de Administradora]")
rows(qry) <- c("[Causas de Morbilidad].[Gran Causa]", "[Municipio Residencia - RIPS].[Codigo Municipio]")
slicers(qry) <- c("[Tiempo].[AÃ±o].['2015']")
# pages(qry) <-  c("[Measures].[Internet Sales Count]", "[Measures].[Internet Sales-Sales Amount]")
print(compose(qry))
qry <- Query()
cube(qry) <- ("[PER - Registro de Discapacidad]" )
columns(qry) <- c(  "[Administradoras].[Nombre de Administradora]")
rows(qry) <- c("[Causas de Morbilidad].[Gran Causa]", "[Municipio Residencia - RIPS].[Codigo Municipio]")
slicers(qry) <- c("[Tiempo].[AÃ±o].['2015']")
# pages(qry) <-  c("[Measures].[Internet Sales Count]", "[Measures].[Internet Sales-Sales Amount]")
print(compose(qry))
cube(qry) <- ("[PER - Registro de Discapacidad]" )
columns(qry) <- c(  "[Administradoras].[Nombre de Administradora]")
rows(qry) <- c("[Causas de Morbilidad].[Gran Causa]") #, "[Municipio Residencia - RIPS].[Codigo Municipio]"
slicers(qry) <- c("[Tiempo].[AÃ±o].['2015']")
# pages(qry) <-  c("[Measures].[Internet Sales Count]", "[Measures].[Internet Sales-Sales Amount]")
print(compose(qry))
cube(qry) <- ("[PER - Registro de Discapacidad]" )
columns(qry) <- c(  "[Administradoras].[Nombre de Administradora]")
rows(qry) <- c("[Causas de Morbilidad].[Gran Causa]") #, "[Municipio Residencia - RIPS].[Codigo Municipio]"
#slicers(qry) <- c("[Tiempo].[AÃ±o].['2015']")
# pages(qry) <-  c("[Measures].[Internet Sales Count]", "[Measures].[Internet Sales-Sales Amount]")
print(compose(qry))
qry <- Query()
cube(qry) <- ("[PER - Registro de Discapacidad]" )
columns(qry) <- c(  "[Administradoras].[Nombre de Administradora]")
rows(qry) <- c("[Causas de Morbilidad].[Gran Causa]") #, "[Municipio Residencia - RIPS].[Codigo Municipio]"
#slicers(qry) <- c("[Tiempo].[AÃ±o].['2015']")
# pages(qry) <-  c("[Measures].[Internet Sales Count]", "[Measures].[Internet Sales-Sales Amount]")
print(compose(qry))
last_error()
rlang::last_error()
#slicers(qry) <- c("[Tiempo].[AÃ±o].['2015']")
# pages(qry) <-  c("[Measures].[Internet Sales Count]", "[Measures].[Internet Sales-Sales Amount]")
print(olapR::compose(qry))
qry <- Query()
cube(qry) <- ("[PER - Registro de Discapacidad]" )
columns(qry) <- c(  "[Administradoras].[Nombre de Administradora]")
rows(qry) <- c("[Causas de Morbilidad].[Gran Causa]") #, "[Municipio Residencia - RIPS].[Codigo Municipio]"
slicers(qry) <- c("[Tiempo].[AÃ±o].['2015']")
# pages(qry) <-  c("[Measures].[Internet Sales Count]", "[Measures].[Internet Sales-Sales Amount]")
print(olapR::compose(qry))
result1 <- executeMD(olapCnn, qry)
source_olap[1]
paste0('[', source_olap[1],']')
cube(qry) <- paste0('[', source_olap[1],']')
qry <- Query()
cube(qry) <- paste0('[', source_olap[1],']')
columns(qry) <- c(  "[Administradoras].[Nombre de Administradora]")
rows(qry) <- c("[Causas de Morbilidad].[Gran Causa]") #, "[Municipio Residencia - RIPS].[Codigo Municipio]"
slicers(qry) <- c("[Tiempo].[AÃ±o].['2015']")
# pages(qry) <-  c("[Measures].[Internet Sales Count]", "[Measures].[Internet Sales-Sales Amount]")
print(olapR::compose(qry))
result1 <- execute2D(olapCnn, qry)
qry <- Query()
cube(qry) <- paste0('[', source_olap[1],']')
qry <- Query()
cube(qry) <- paste0('[', source_olap[1],']')
rows(qry) <- c('[Persona].[Tipo Identificacion]')
slicers(qry) <- c('[Administradoras].[Nombre de Administradora].[EPSS17 - EPS  FAMISANAR LTDA]')
# pages(qry) <-  c("[Measures].[Internet Sales Count]", "[Measures].[Internet Sales-Sales Amount]")
print(olapR::compose(qry))
qry <- olapR::Query()
olapR::cube(qry) <- paste0('[', source_olap[1],']')
olapR::rows(qry) <- c('[Persona].[Tipo Identificacion]')
olapR::slicers(qry) <- c('[Administradoras].[Nombre de Administradora].[EPSS17 - EPS  FAMISANAR LTDA]')
# columns(qry) <- c(  "[Administradoras].[Nombre de Administradora]")
# rows(qry) <- c("[Causas de Morbilidad].[Gran Causa]") #, "[Municipio Residencia - RIPS].[Codigo Municipio]"
# slicers(qry) <- c("[Tiempo].[AÃ±o].['2015']")
# pages(qry) <-  c("[Measures].[Internet Sales Count]", "[Measures].[Internet Sales-Sales Amount]")
print(olapR::compose(qry))
olapR::cube(qry) <- paste0('[', source_olap[1],']')
qry <- olapR::Query()
olapR::cube(qry) <- paste0('[', source_olap[1],']')
olapR::columns(qry) <- c('[Municipio Residencia - RIPS].[Codigo Municipio]')
olapR::rows(qry) <- c('[Persona].[Tipo Identificacion]')
olapR::slicers(qry) <- c('[Administradoras].[Nombre de Administradora].[EPSS17 - EPS  FAMISANAR LTDA]')
# columns(qry) <- c(  "[Administradoras].[Nombre de Administradora]")
# rows(qry) <- c("[Causas de Morbilidad].[Gran Causa]") #, "[Municipio Residencia - RIPS].[Codigo Municipio]"
# slicers(qry) <- c("[Tiempo].[AÃ±o].['2015']")
# pages(qry) <-  c("[Measures].[Internet Sales Count]", "[Measures].[Internet Sales-Sales Amount]")
print(olapR::compose(qry))
olapR::cube(qry) <- paste0('[', source_olap[1],']')
olapR::columns(qry) <- c('[Municipio Residencia - RIPS].[Codigo Municipio]')
olapR::rows(qry) <- c('[Persona].[Tipo Identificacion]')
olapR::slicers(qry) <- c('[Administradoras].[Nombre de Administradora].[EPSS17 - EPS  FAMISANAR LTDA]')
# columns(qry) <- c(  "[Administradoras].[Nombre de Administradora]")
# rows(qry) <- c("[Causas de Morbilidad].[Gran Causa]") #, "[Municipio Residencia - RIPS].[Codigo Municipio]"
# slicers(qry) <- c("[Tiempo].[AÃ±o].['2015']")
# pages(qry) <-  c("[Measures].[Internet Sales Count]", "[Measures].[Internet Sales-Sales Amount]")
print(olapR::compose(qry))
is.Query(qry)
execute2D(olapCnn, qry)
olapR::slicers(qry) <- c('[Administradoras].[Nombre de Administradora].&[EPSS17 - EPS  FAMISANAR LTDA]')
qry <- olapR::Query()
olapR::cube(qry) <- paste0('[', source_olap[1],']')
olapR::columns(qry) <- c('[Municipio Residencia - RIPS].[Codigo Municipio]')
olapR::rows(qry) <- c('[Persona].[Tipo Identificacion]')
olapR::slicers(qry) <- c('[Administradoras].[Nombre de Administradora].&[EPSS17 - EPS  FAMISANAR LTDA]')
# columns(qry) <- c(  "[Administradoras].[Nombre de Administradora]")
# rows(qry) <- c("[Causas de Morbilidad].[Gran Causa]") #, "[Municipio Residencia - RIPS].[Codigo Municipio]"
# slicers(qry) <- c("[Tiempo].[AÃ±o].['2015']")
# pages(qry) <-  c("[Measures].[Internet Sales Count]", "[Measures].[Internet Sales-Sales Amount]")
print(olapR::compose(qry))
is.Query(qry)
execute2D(olapCnn, qry)
qry <- olapR::Query()
olapR::cube(qry) <- paste0('[', source_olap[1],']')
olapR::columns(qry) <- c('[Municipio Residencia - RIPS].[Codigo Municipio]')
olapR::rows(qry) <- c('[Persona].[Tipo Identificacion]')
# columns(qry) <- c(  "[Administradoras].[Nombre de Administradora]")
# rows(qry) <- c("[Causas de Morbilidad].[Gran Causa]") #, "[Municipio Residencia - RIPS].[Codigo Municipio]"
# slicers(qry) <- c("[Tiempo].[AÃ±o].['2015']")
# pages(qry) <-  c("[Measures].[Internet Sales Count]", "[Measures].[Internet Sales-Sales Amount]")
print(olapR::compose(qry))
is.Query(qry)
execute2D(olapCnn, qry)
